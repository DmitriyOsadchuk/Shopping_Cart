{"ast":null,"code":"import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\nimport { cartReducer } from \"./components/reducers/cartReducer\";\nimport thunk from \"redux-thunk\"; // const reducer = combineReducers({\n//     form: reduxFormReducer,\n// });\n//\n// const store = (window.devToolsExtension\n//     ? window.devToolsExtension()(createStore)\n//     : createStore)(reducer);\n\nvar initialState = {};\nvar reducer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nvar store = createStore(combineReducers({\n  form: reduxFormReducer,\n  cart: cartReducer\n}), initialState, reducer(applyMiddleware(thunk)));\n\nvar saveState = function saveState(state) {\n  try {\n    // Convert the state to a JSON string\n    var serialisedState = JSON.stringify(state); // Save the serialised state to localStorage against the key 'app_state'\n\n    window.localStorage.setItem('app_state', serialisedState);\n  } catch (err) {// Log errors here, or ignore\n  }\n};\n\nstore.subscribe(function () {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Shopping-Cart/src/store.js"],"names":["createStore","applyMiddleware","compose","combineReducers","reducer","reduxFormReducer","cartReducer","thunk","initialState","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","form","cart","saveState","state","serialisedState","JSON","stringify","localStorage","setItem","err","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,EAAgDC,eAAhD,QAAuE,OAAvE;AACA,SAASC,OAAO,IAAIC,gBAApB,QAA4C,YAA5C;AACA,SAASC,WAAT,QAA4B,mCAA5B;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,YAAY,GAAG,EAArB;AACA,IAAMJ,OAAO,GAAGK,MAAM,CAACC,oCAAP,IAA+CR,OAA/D;AACA,IAAMS,KAAK,GAAGX,WAAW,CACrBG,eAAe,CAAC;AACZS,EAAAA,IAAI,EAAEP,gBADM;AAEZQ,EAAAA,IAAI,EAAEP;AAFM,CAAD,CADM,EAKrBE,YALqB,EAMrBJ,OAAO,CAACH,eAAe,CAACM,KAAD,CAAhB,CANc,CAAzB;;AASA,IAAMO,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,MAAI;AACA;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB,CAFA,CAIA;;AACAN,IAAAA,MAAM,CAACU,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAAyCJ,eAAzC;AACH,GAND,CAME,OAAOK,GAAP,EAAY,CACV;AACH;AACJ,CAVD;;AAYAV,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClBR,EAAAA,SAAS,CAACH,KAAK,CAACY,QAAN,EAAD,CAAT;AACH,CAFD;AAIA,eAAeZ,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\nimport { cartReducer } from \"./components/reducers/cartReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\n// const reducer = combineReducers({\r\n//     form: reduxFormReducer,\r\n// });\r\n//\r\n// const store = (window.devToolsExtension\r\n//     ? window.devToolsExtension()(createStore)\r\n//     : createStore)(reducer);\r\n\r\nconst initialState = {};\r\nconst reducer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    combineReducers({\r\n        form: reduxFormReducer,\r\n        cart: cartReducer,\r\n    }),\r\n    initialState,\r\n    reducer(applyMiddleware(thunk))\r\n);\r\n\r\nconst saveState = (state) => {\r\n    try {\r\n        // Convert the state to a JSON string\r\n        const serialisedState = JSON.stringify(state);\r\n\r\n        // Save the serialised state to localStorage against the key 'app_state'\r\n        window.localStorage.setItem('app_state', serialisedState);\r\n    } catch (err) {\r\n        // Log errors here, or ignore\r\n    }\r\n};\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}