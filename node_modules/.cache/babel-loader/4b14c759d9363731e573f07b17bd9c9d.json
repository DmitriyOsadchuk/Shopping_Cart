{"ast":null,"code":"import { createStore, combineReducers } from 'redux';\nimport { reducer as reduxFormReducer } from 'redux-form';\nvar reducer = combineReducers({\n  form: reduxFormReducer // mounted under \"form\"\n\n});\nvar store = (window.devToolsExtension ? window.devToolsExtension()(createStore) : createStore)(reducer);\n\nvar saveState = function saveState(state) {\n  try {\n    // Convert the state to a JSON string\n    var serialisedState = JSON.stringify(state); // Save the serialised state to localStorage against the key 'app_state'\n\n    window.localStorage.setItem('addedItems', serialisedState);\n  } catch (err) {// Log errors here, or ignore\n  }\n};\n\nstore.subscribe(function () {\n  saveState(store.getState());\n});\nexport default store;","map":{"version":3,"sources":["C:/Users/user/Desktop/Shopping-Cart/src/store.js"],"names":["createStore","combineReducers","reducer","reduxFormReducer","form","store","window","devToolsExtension","saveState","state","serialisedState","JSON","stringify","localStorage","setItem","err","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,SAASC,OAAO,IAAIC,gBAApB,QAA4C,YAA5C;AAEA,IAAMD,OAAO,GAAGD,eAAe,CAAC;AAC5BG,EAAAA,IAAI,EAAED,gBADsB,CACJ;;AADI,CAAD,CAA/B;AAGA,IAAME,KAAK,GAAG,CAACC,MAAM,CAACC,iBAAP,GACTD,MAAM,CAACC,iBAAP,GAA2BP,WAA3B,CADS,GAETA,WAFQ,EAEKE,OAFL,CAAd;;AAIA,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAW;AACzB,MAAI;AACA;AACA,QAAMC,eAAe,GAAGC,IAAI,CAACC,SAAL,CAAeH,KAAf,CAAxB,CAFA,CAIA;;AACAH,IAAAA,MAAM,CAACO,YAAP,CAAoBC,OAApB,CAA4B,YAA5B,EAA0CJ,eAA1C;AACH,GAND,CAME,OAAOK,GAAP,EAAY,CACV;AACH;AACJ,CAVD;;AAYAV,KAAK,CAACW,SAAN,CAAgB,YAAM;AAClBR,EAAAA,SAAS,CAACH,KAAK,CAACY,QAAN,EAAD,CAAT;AACH,CAFD;AAGA,eAAeZ,KAAf","sourcesContent":["import { createStore, combineReducers } from 'redux';\r\nimport { reducer as reduxFormReducer } from 'redux-form';\r\n\r\nconst reducer = combineReducers({\r\n    form: reduxFormReducer, // mounted under \"form\"\r\n});\r\nconst store = (window.devToolsExtension\r\n    ? window.devToolsExtension()(createStore)\r\n    : createStore)(reducer);\r\n\r\nconst saveState = (state) => {\r\n    try {\r\n        // Convert the state to a JSON string\r\n        const serialisedState = JSON.stringify(state);\r\n\r\n        // Save the serialised state to localStorage against the key 'app_state'\r\n        window.localStorage.setItem('addedItems', serialisedState);\r\n    } catch (err) {\r\n        // Log errors here, or ignore\r\n    }\r\n};\r\n\r\nstore.subscribe(() => {\r\n    saveState(store.getState());\r\n});\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}